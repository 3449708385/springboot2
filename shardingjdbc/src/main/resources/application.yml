server:
  port: 8010
spring:
  application:
    name: shardingjdbc

sharding:
  jdbc:
  ####ds1
    datasource:
      names: ds1,ds2,ds0
      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/ds_1?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
        username: root
        password: Alex2017!
      ds1Slave:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/ds_1?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
        username: root
        password: Alex2017!
      ds2:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/ds_2?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
        username: root
        password: Alex2017!
      ds2Slave:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/ds_2?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
        username: root
        password: Alex2017!
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/ds_0?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
        username: root
        password: Alex2017!
      ds0Slave:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/ds_0?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
        username: root
        password: Alex2017!
####  分片配置
    config:
      sharding:
        #默认数据源
        #default-data-source-name: ds1
        #多库单表数据分片配置
        default-database-strategy:
          inline:
            #smt_id 是个数据id，插入的时候可以通过雪花算法自增，Long型
            sharding-column: smt_id
            algorithm-expression: ds$->{smt_id % 3}
        #单库单表数据分片配置
        tables:
        ####t_order表分破案策略
          t_order:
            table-strategy:
              inline:
              #### 根据order_id 进行分片,id如果是数据库自增的，就不能通过id分片
                sharding-column: order_id
               ####  ds_1.t_order_0 ds_1.t_order_1,后面带表名的必须是数据库的真实名字
                algorithm-expression: ds_1.t_order_$->{order_id % 2}
              ###分表的总数 0到1   t_order_0 t_order_1
            actual-data-nodes: ds1.t_order_$->{0..1}
          t_smt:
            table-strategy:
              inline:
              #### 根据order_id 进行分片,id如果是数据库自增的，就不能通过id分片
                sharding-column: smt_id
               ####  ds_0.t_smt ds_1.t_smt ds_2.t_smt,后面带表名的必须是数据库的真实名字
                algorithm-expression: ds_$->{smt_id % 3}.t_smt
              ###分表的总数 0到1   ds_0.t_smt ds_1.t_smt ds_2.t_smt
            actual-data-nodes: ds$->{0..2}.t_smt
        props:
          sql:
          ### 开启分片日志
            show: true
      ### 读写分离配置
      #多主多从,未试
      master-slave-rules:
        ds1:
          master-data-source-name: ds1
          slave-data-source-names: ds1Slave
        ds2:
          master-data-source-name: ds2
          slave-data-source-names: ds2Slave
        ds0:
          master-data-source-name: ds0
          slave-data-source-names: ds0Slave
      #一主多从
      #masterslave:
        #load-balance-algorithm-type: round_robin
        #name: datasource
        #master-data-source-name: ds1
        #slave-data-source-names: ds1Slave, ds2Slave, ds0Slave

#sql logs
mybatis:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  config-locations: classpath:mybatis/mybatis-config.xml
  mapper-locations: classpath:mybatis/mapper/*.xml
logging:
  level:
     com.mgp.*.dao : debug

eureka:
  instance:
    hostname: 127.0.0.1
    prefer-ip-address: true
    ip-address: 127.0.0.1
    instance-id: ${spring.application.name}:${server.port} #指定实例id
    lease-expiration-duration-in-seconds: 20   #续约更新时间间隔
    lease-renewal-interval-in-seconds: 60     #续约到期时间间隔，默认90
  client:
    registerWithEureka: true  #是否注册自己到eureka服务中，默认不注册
    fetchRegistry: true     #是否从eureka服务中获取注册信息
    serviceUrl:
      # 服务器注册/获取服务器的zone
      #自己注册到eureka那个服务,可注册多个，用，分隔
      defaultZone: http://${eureka.instance.hostname}:8001/eureka/
    eurekaServerConnectTimeoutSeconds: 60
    eurekaServerReadTimeoutSeconds: 60
    # 健康检测问题 https://my.oschina.net/andChow/blog/1939238



