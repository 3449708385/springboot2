spring:
  application:
    name: oauth2_api #服务名称
  cloud:
    # 设置偏好网段
    inetutils:
      preferred-networks: 127.0.0.
    loadbalancer:
      retry:
        enabled: true
  jackson:
    date-format: yyyy-MM-dd
    joda-date-time-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8

server:
  port: 8006    # 端口号

eureka:
  server:
    # 测试时关闭自我保护机制，保证不可用服务及时踢出
    enable-self-preservation: true
    eviction-interval-timer-in-ms: 60000  #清理间隔（毫秒）
    #peerNodeReadTimeoutMs: 200000
    #peerNodeConnectTimeoutMs: 60000
    #https://blog.csdn.net/qq_26440803/article/details/83113037
  instance:
    hostname: 127.0.0.1
    prefer-ip-address: true
    ip-address: 127.0.0.1
    instance-id: ${spring.application.name}:${server.port} #指定实例id
    lease-expiration-duration-in-seconds: 30   #续约更新时间间隔
    lease-renewal-interval-in-seconds: 10     #续约到期时间间隔，默认90
  client:
    registerWithEureka: true  #是否注册自己到eureka服务中，默认不注册
    fetchRegistry: true     #是否从eureka服务中获取注册信息
    serviceUrl:
      # 服务器注册/获取服务器的zone
      #自己注册到eureka那个服务,可注册多个，用，分隔
      defaultZone: http://${eureka.instance.hostname}:8001/eureka/
    eurekaServerConnectTimeoutSeconds: 60
    eurekaServerReadTimeoutSeconds: 60
    # 健康检测问题 https://my.oschina.net/andChow/blog/1939238

logging:
  level:
    org.springframework.security: DEBUG

security:
  oauth2:
    resource:
      ####从认证授权中心上验证token
      tokenInfoUri: http://localhost:8005/oauth/check_token
      preferTokenInfo: true
    client:
      accessTokenUri: http://localhost:8005/oauth/token
      userAuthorizationUri: http://localhost:8005/oauth/authorize
      ###appid
      clientId: client_1
      ###appSecret
      clientSecret: client_1